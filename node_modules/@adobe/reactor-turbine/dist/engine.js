/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 22);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = window;

/***/ }),
/* 1 */
/***/ (function(module, exports) {

/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/

/**
 * Log levels.
 * @readonly
 * @enum {string}
 * @private
 */
var LEVELS = {
  LOG: 'log',
  INFO: 'info',
  WARN: 'warn',
  ERROR: 'error'
};

/**
 * Rocket unicode surrogate pair.
 * @type {string}
 */
var ROCKET = '\uD83D\uDE80';

/**
 * The user's internet explorer version. If they're not running internet explorer, then it should
 * be NaN.
 * @type {Number}
 */
var ieVersion = parseInt((/msie (\d+)/.exec(navigator.userAgent.toLowerCase()) || [])[1]);

/**
 * Prefix to use on all messages. The rocket unicode doesn't work on IE 9 and 10.
 * @type {string}
 */
var messagePrefix = ieVersion === 9 || ieVersion === 10 ? '[Launch]' : ROCKET;

/**
 * History of logged entries capped to a max. Note that while this is private it is accessed
 * by end-to-end tests.
 * @private
 */
var history = [];

/**
 * The maximum number of log entries to retain in the history.
 * @private
 */
var maxHistory = 100;

/**
 * Whether logged messages should be output to the console. When set to true, all messages saved
 * in the logging history that have not been previously output to the console will be immediately
 * output to the console.
 * @type {boolean}
 */
var outputEnabled = false;

/**
 * Flushes a log entry to the web console.
 * @param {Object} entry
 * @private
 */
var flushEntry = function(entry) {
  if (!entry.flushed) {
    if (window.console) {

      window.console[entry.level](messagePrefix + ' ' + entry.message);
    }
    entry.flushed = true;
  }
};

/**
 * Flushes all stored log entries to the web console if they have not been flushed previously.
 * @private
 */
var flushHistory = function() {
  history.forEach(flushEntry);
};

/**
 * Processes a log message.
 * @param {string} message The message to log.
 * @param level
 * @private
 */
var process = function(message, level) {
  var entry = {
    message: message,
    level: level,
    flushed: false
  };

  history.push(entry);

  if (history.length > maxHistory) {
    history.shift();
  }

  if (outputEnabled) {
    flushEntry(entry);
  }
};

/**
 * Prefixes messages with a prefix wrapped in square brackets.
 * @param {String} prefix A prefix for the message.
 * @param {String} message The message that should be prefixed.
 * @returns {string} Prefixed message.
 */
var prefixWithBrackets = function(prefix, message) {
  return '[' + prefix + '] ' + message;
};

/**
 * Outputs a message to the web console.
 * @param {String} message The message to output.
 */
var log = function(message) {
  process(message, LEVELS.LOG);
};

/**
 * Outputs informational message to the web console. In some browsers a small "i" icon is
 * displayed next to these items in the web console's log.
 * @param {String} message The message to output.
 */
var info = function(message) {
  process(message, LEVELS.INFO);
};

/**
 * Outputs a warning message to the web console.
 * @param {String} message The message to output.
 */
var warn = function(message) {
  process(message, LEVELS.WARN);
};

/**
 * Outputs an error message to the web console.
 * @param {String} message The message to output.
 */
var error = function(message) {
  process(message, LEVELS.ERROR);
};

module.exports = {
  log: log,
  info: info,
  warn: warn,
  error: error,
  /**
   * Whether logged messages should be output to the console. When set to true, all messages saved
   * in the logging history that have not been previously output to the console will be immediately
   * output to the console.
   * @type {boolean}
   */
  get outputEnabled() {
    return outputEnabled;
  },
  set outputEnabled(value) {
    if (outputEnabled === value) {
      return;
    }

    outputEnabled = value;

    if (value) {
      flushHistory();
    }
  },
  /**
   * Creates a logging utility that only exposes logging functionality and prefixes all messages
   * with an identifier.
   */
  createPrefixedLogger: function(identifier) {
    return {
      log: function(message) {
        log(prefixWithBrackets(identifier, message));
      },
      info: function(message) {
        info(prefixWithBrackets(identifier, message));
      },
      warn: function(message) {
        warn(prefixWithBrackets(identifier, message));
      },
      error: function(message) {
        error(prefixWithBrackets(identifier, message));
      }
    };
  }
};


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/

var dataElementSafe = __webpack_require__(27);
var moduleProvider = __webpack_require__(31);
var getLocalStorageItem = __webpack_require__(29);
var setLocalStorageItem = __webpack_require__(44);
var createGetSharedModuleExports = __webpack_require__(25);
var createGetHostedLibFileUrl = __webpack_require__(24);
var resolveRelativePath = __webpack_require__(43);
var logger = __webpack_require__(1);

var HIDE_ACTIVITY_LOCAL_STORAGE_NAME = 'sdsat_hide_activity';
var DEBUG_LOCAL_STORAGE_NAME = 'sdsat_debug';

var customVars = {};

// Initialize immediately in case init isn't called (which occurs in tests that
// essentially use state.js as a stub but never call init).
var rules = [];
var dataElements = {};
var buildInfo = {};
var propertySettings = {};

var init = function(container) {
  // These can't be required at the top of the file because they require other modules which require
  // state. This circular dependency would cause issues. Maybe there's a better way?
  var createGetExtensionSettings = __webpack_require__(23);
  var createPublicRequire = __webpack_require__(26);

  rules = container.rules || rules;
  dataElements = container.dataElements || dataElements;
  buildInfo = container.buildInfo || buildInfo;
  propertySettings = container.propertySettings || propertySettings;

  var extensions = container.extensions;
  if (extensions) {
    var getSharedModuleExports = createGetSharedModuleExports(extensions, moduleProvider);

    Object.keys(extensions).forEach(function(extensionName) {
      var extension = extensions[extensionName];
      var getExtensionSettings = createGetExtensionSettings(extension.settings);

      if (extension.modules) {
        Object.keys(extension.modules).forEach(function(referencePath) {
          var getModuleExportsByRelativePath = function(relativePath) {
            var resolvedReferencePath = resolveRelativePath(referencePath, relativePath);
            return moduleProvider.getModuleExports(resolvedReferencePath);
          };

          var publicRequire = createPublicRequire({
            logger: logger.createPrefixedLogger(extension.displayName),
            buildInfo: buildInfo,
            propertySettings: propertySettings,
            getExtensionSettings: getExtensionSettings,
            getSharedModuleExports: getSharedModuleExports,
            getModuleExportsByRelativePath: getModuleExportsByRelativePath,
            getHostedLibFileUrl: createGetHostedLibFileUrl(extension.hostedLibFilesBaseUrl)
          });

          var module = extension.modules[referencePath];

          moduleProvider.registerModule(referencePath, module, publicRequire);
        });
      }
    });

    // We want to extract the module exports immediately to allow the modules
    // to run some logic immediately.
    // We need to do the extraction here in order for the moduleProvider to
    // have all the modules previously registered. (eg. when moduleA needs moduleB, both modules
    // must exist inside moduleProvider).
    moduleProvider.hydrateCache();
  }
};

var getRules = function() {
  return rules;
};

var getElementDefinition = function(name) {
  return dataElements[name];
};

var getShouldExecuteActions = function() {
  return getLocalStorageItem(HIDE_ACTIVITY_LOCAL_STORAGE_NAME) !== 'true';
};

var getDebugOutputEnabled = function() {
  return getLocalStorageItem(DEBUG_LOCAL_STORAGE_NAME) === 'true';
};

var setDebugOutputEnabled = function(value) {
  setLocalStorageItem(DEBUG_LOCAL_STORAGE_NAME, value);
};

var getPropertySettings = function() {
  // Intentionally does not support data element token replacements because how data element
  // tokens are replaced depends on certain property settings which creates a chicken-and-egg
  // problem.
  return propertySettings;
};

var getBuildInfo = function() {
  return buildInfo;
};

module.exports = {
  init: init,
  customVars: customVars,
  getModuleDisplayName: moduleProvider.getModuleDisplayName,
  getModuleExports: moduleProvider.getModuleExports,
  getRules: getRules,
  getDataElementDefinition: getElementDefinition,
  getShouldExecuteActions: getShouldExecuteActions,
  getDebugOutputEnabled: getDebugOutputEnabled,
  setDebugOutputEnabled: setDebugOutputEnabled,
  getCachedDataElementValue: dataElementSafe.getValue,
  cacheDataElementValue: dataElementSafe.setValue,
  getPropertySettings: getPropertySettings,
  getBuildInfo: getBuildInfo
};


/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = document;

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*!
 * cookie
 * Copyright(c) 2012-2014 Roman Shtylman
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */



/**
 * Module exports.
 * @public
 */

exports.parse = parse;
exports.serialize = serialize;

/**
 * Module variables.
 * @private
 */

var decode = decodeURIComponent;
var encode = encodeURIComponent;
var pairSplitRegExp = /; */;

/**
 * RegExp to match field-content in RFC 7230 sec 3.2
 *
 * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]
 * field-vchar   = VCHAR / obs-text
 * obs-text      = %x80-FF
 */

var fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;

/**
 * Parse a cookie header.
 *
 * Parse the given cookie header string into an object
 * The object has the various cookies as keys(names) => values
 *
 * @param {string} str
 * @param {object} [options]
 * @return {object}
 * @public
 */

function parse(str, options) {
  if (typeof str !== 'string') {
    throw new TypeError('argument str must be a string');
  }

  var obj = {}
  var opt = options || {};
  var pairs = str.split(pairSplitRegExp);
  var dec = opt.decode || decode;

  for (var i = 0; i < pairs.length; i++) {
    var pair = pairs[i];
    var eq_idx = pair.indexOf('=');

    // skip things that don't look like key=value
    if (eq_idx < 0) {
      continue;
    }

    var key = pair.substr(0, eq_idx).trim()
    var val = pair.substr(++eq_idx, pair.length).trim();

    // quoted values
    if ('"' == val[0]) {
      val = val.slice(1, -1);
    }

    // only assign once
    if (undefined == obj[key]) {
      obj[key] = tryDecode(val, dec);
    }
  }

  return obj;
}

/**
 * Serialize data into a cookie header.
 *
 * Serialize the a name value pair into a cookie string suitable for
 * http headers. An optional options object specified cookie parameters.
 *
 * serialize('foo', 'bar', { httpOnly: true })
 *   => "foo=bar; httpOnly"
 *
 * @param {string} name
 * @param {string} val
 * @param {object} [options]
 * @return {string}
 * @public
 */

function serialize(name, val, options) {
  var opt = options || {};
  var enc = opt.encode || encode;

  if (typeof enc !== 'function') {
    throw new TypeError('option encode is invalid');
  }

  if (!fieldContentRegExp.test(name)) {
    throw new TypeError('argument name is invalid');
  }

  var value = enc(val);

  if (value && !fieldContentRegExp.test(value)) {
    throw new TypeError('argument val is invalid');
  }

  var str = name + '=' + value;

  if (null != opt.maxAge) {
    var maxAge = opt.maxAge - 0;
    if (isNaN(maxAge)) throw new Error('maxAge should be a Number');
    str += '; Max-Age=' + Math.floor(maxAge);
  }

  if (opt.domain) {
    if (!fieldContentRegExp.test(opt.domain)) {
      throw new TypeError('option domain is invalid');
    }

    str += '; Domain=' + opt.domain;
  }

  if (opt.path) {
    if (!fieldContentRegExp.test(opt.path)) {
      throw new TypeError('option path is invalid');
    }

    str += '; Path=' + opt.path;
  }

  if (opt.expires) {
    if (typeof opt.expires.toUTCString !== 'function') {
      throw new TypeError('option expires is invalid');
    }

    str += '; Expires=' + opt.expires.toUTCString();
  }

  if (opt.httpOnly) {
    str += '; HttpOnly';
  }

  if (opt.secure) {
    str += '; Secure';
  }

  if (opt.sameSite) {
    var sameSite = typeof opt.sameSite === 'string'
      ? opt.sameSite.toLowerCase() : opt.sameSite;

    switch (sameSite) {
      case true:
        str += '; SameSite=Strict';
        break;
      case 'lax':
        str += '; SameSite=Lax';
        break;
      case 'strict':
        str += '; SameSite=Strict';
        break;
      default:
        throw new TypeError('option sameSite is invalid');
    }
  }

  return str;
}

/**
 * Try decoding a string using a decoding function.
 *
 * @param {string} str
 * @param {function} decode
 * @private
 */

function tryDecode(str, decode) {
  try {
    return decode(str);
  } catch (e) {
    return str;
  }
}


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/

var isPlainObject = __webpack_require__(11);
var getVar = __webpack_require__(7);
var isVar = __webpack_require__(30);
var state = __webpack_require__(2);
var undefinedVarsReturnEmpty = state.getPropertySettings().undefinedVarsReturnEmpty;

var replaceTokensInString;
var replaceTokensInObject;
var replaceTokensInArray;
var replaceTokens;

var getVarValue = function(token, variableName, element, event) {
  if (!isVar(variableName)) {
    return token;
  }

  var val = getVar(variableName, element, event);
  return val == null && undefinedVarsReturnEmpty ? '' : val;
};

/**
 * Perform variable substitutions to a string where tokens are specified in the form %foo%.
 * If the only content of the string is a single data element token, then the raw data element
 * value will be returned instead.
 *
 * @param str {string} The string potentially containing data element tokens.
 * @param element {HTMLElement} The element to use for tokens in the form of %this.property%.
 * @param event {Object} The event object to use for tokens in the form of %target.property%.
 * @returns {*}
 */
replaceTokensInString = function(str, element, event) {
  // Is the string a single data element token and nothing else?
  var result = /^%([^%]+)%$/.exec(str);

  if (result) {
    return getVarValue(str, result[1], element, event);
  } else {
    return str.replace(/%(.+?)%/g, function(token, variableName) {
      return getVarValue(token, variableName, element, event);
    });
  }
};

replaceTokensInObject = function(obj, element, event) {
  var ret = {};
  var keys = Object.keys(obj);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var value = obj[key];
    ret[key] = replaceTokens(value, element, event);
  }
  return ret;
};

replaceTokensInArray = function(arr, element, event) {
  var ret = [];
  for (var i = 0, len = arr.length; i < len; i++) {
    ret.push(replaceTokens(arr[i], element, event));
  }
  return ret;
};

replaceTokens = function(thing, element, event) {
  if (typeof thing === 'string') {
    return replaceTokensInString(thing, element, event);
  } else if (Array.isArray(thing)) {
    return replaceTokensInArray(thing, element, event);
  } else if (isPlainObject(thing)) {
    return replaceTokensInObject(thing, element, event);
  }

  return thing;
};

/**
 * Replacing any variable tokens (%myDataElement%, %this.foo%, etc.) with their associated values.
 * A new string, object, or array will be created; the thing being processed will never be
 * modified.
 * @param {*} thing Thing potentially containing variable tokens. Objects and arrays will be
 * deeply processed.
 * @param {HTMLElement} [element] Associated HTML element. Used for special tokens
 * (%this.something%).
 * @param {Object} [event] Associated event. Used for special tokens (%event.something%,
 * %target.something%)
 * @returns {*} A processed value.
 */
module.exports = replaceTokens;


/***/ }),
/* 6 */
/***/ (function(module, exports) {

/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/

/**
 * "Cleans" text by trimming the string and removing spaces and newlines.
 * @param {string} str The string to clean.
 * @returns {string}
 */
module.exports = function(str) {
  return typeof str === 'string' ? str.replace(/\s+/g, ' ').trim() : str;
};


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/

var document = __webpack_require__(3);
var window = __webpack_require__(0);
var state = __webpack_require__(2);
var getDataElementValue = __webpack_require__(9);
var getUri = __webpack_require__(37);
var getQueryParam = __webpack_require__(10);
var cleanText = __webpack_require__(6);

var specialPropertyAccessors = {
  text: function(obj) {
    return obj.textContent;
  },
  cleanText: function(obj) {
    return cleanText(obj.textContent);
  }
};

/**
 * This returns the value of a property at a given path. For example, a <code>path<code> of
 * <code>foo.bar</code> will return the value of <code>obj.foo.bar</code>.
 *
 * In addition, if <code>path</code> is <code>foo.bar.getAttribute(unicorn)</code> and
 * <code>obj.foo.bar</code> has a method named <code>getAttribute</code>, the method will be
 * called with a value of <code>"unicorn"</code> and the value will be returned.
 *
 * Also, if <code>path</code> is <code>foo.bar.@text</code> or other supported properties
 * beginning with <code>@</code>, a special accessor will be used.
 *
 * @param host
 * @param path
 * @param supportSpecial
 * @returns {*}
 */
var getObjectProperty = function(host, path, supportSpecial) {
  var propChain = path.split('.');
  var value = host;
  var attrMatch;
  for (var i = 0, len = propChain.length; i < len; i++) {
    if (value == null) {
      return undefined;
    }
    var prop = propChain[i];
    if (supportSpecial && prop.charAt(0) === '@') {
      var specialProp = prop.slice(1);
      value = specialPropertyAccessors[specialProp](value);
      continue;
    }
    if (value.getAttribute &&
      (attrMatch = prop.match(/^getAttribute\((.+)\)$/))) {
      var attr = attrMatch[1];
      value = value.getAttribute(attr);
      continue;
    }
    value = value[prop];
  }
  return value;
};

// getVar(variable, elm, evt)
// ==========================
//
// Return the value of a variable, where the variable
// can be a data element, defined in the "data" section
// of the initial config, or reference properties on
// an element, event, or target of the event in question,
// a query parameter, or a random number.
//
// - `variable` - the name of the variable to get
// - `[element]` - the associated element, if any
// - `[event]` - the associated event, if any
module.exports = function(variable, element, event) {
  var uri = getUri();
  var randMatch;
  var value;
  var map = {
    URI: uri,
    uri: uri,
    protocol: document.location.protocol,
    hostname: document.location.hostname
  };
  if (state.getDataElementDefinition(variable)) {
    return getDataElementValue(variable);
  }
  value = map[variable];
  if (value === undefined) {
    if (variable.substring(0, 5) === 'this.') {
      if (element) {
        variable = variable.slice(5);
        value = getObjectProperty(element, variable, true);
      }
    } else if (variable.substring(0, 6) === 'event.') {
      if (event) {
        variable = variable.slice(6);
        value = getObjectProperty(event, variable);
      }
    } else if (variable.substring(0, 7) === 'target.') {
      if (event.target) {
        variable = variable.slice(7);
        value = getObjectProperty(event.target, variable);
      }
    } else if (variable.substring(0, 7) === 'window.') {
      variable = variable.slice(7);
      value = getObjectProperty(window, variable);
    } else if (variable.substring(0, 6) === 'param.') {
      variable = variable.slice(6);
      value = getQueryParam(variable);
    } else {
      randMatch = variable.match(/^rand([0-9]+)$/);
      if (randMatch) {
        var len = Number(randMatch[1]);
        var s = (Math.random() * (Math.pow(10, len) - 1)).toFixed(0);
        value = Array(len - s.length + 1).join('0') + s;
      } else {
        value = getObjectProperty(state.customVars, variable);
      }
    }
  }
  return value;
};


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/

module.exports = window.Promise || __webpack_require__(18);


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/

var state = __webpack_require__(2);
var cleanText = __webpack_require__(6);
var logger = __webpack_require__(1);

var getErrorMessage = function(dataDef, dataElementName, errorMessage, errorStack) {
  return 'Failed to execute data element module ' + dataDef.modulePath + ' for data element ' +
    dataElementName + '. ' + errorMessage + (errorStack ? '\n' + errorStack : '');
};

module.exports = function(name, suppressDefault) {
  var dataDef = state.getDataElementDefinition(name);

  if (!dataDef) {
    return state.getPropertySettings().undefinedVarsReturnEmpty ? '' : null;
  }

  var storeLength = dataDef.storeLength;
  var moduleExports;

  try {
    moduleExports = state.getModuleExports(dataDef.modulePath);
  } catch (e) {
    logger.error(getErrorMessage(dataDef, name, e.message, e.stack));
    return;
  }

  if (typeof moduleExports !== 'function') {
    logger.error(getErrorMessage(dataDef, name, 'Module did not export a function.'));
    return;
  }

  var value;

  try {
    value = moduleExports(dataDef.settings);
  } catch (e) {
    logger.error(getErrorMessage(dataDef, name, e.message, e.stack));
    return;
  }

  if (value === undefined && storeLength) {
    value = state.getCachedDataElementValue(name, storeLength);
  } else if (value !== undefined && storeLength) {
    state.cacheDataElementValue(name, storeLength, value);
  }

  if (value === undefined && !suppressDefault) {
    // Have to wrap "default" in quotes since it is a keyword.
    /*eslint-disable dot-notation*/
    value = dataDef.defaultValue || '';
    /*eslint-enable dot-notation*/
  }

  if (typeof value === 'string') {
    if (dataDef.cleanText) {
      value = cleanText(value);
    }

    if (dataDef.forceLowerCase) {
      value = value.toLowerCase();
    }
  }

  return value;
};


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/

var window = __webpack_require__(0);

/**
 * Retrieves a variable value from the current URL querystring.
 * @param name The name of the querystring parameter.
 * @param [caseInsensitive=false] Whether differences in parameter name casing should be ignored.
 * This does not change the value that is returned.
 * @returns {string}
 */
module.exports = function(name, caseInsensitive) {
  // We can't cache querystring values because they can be changed at any time with
  // the HTML5 History API.
  var match = new RegExp('[?&]' + name + '=([^&]*)', caseInsensitive ? 'i' : '')
      .exec(window.location.search);

  if (match) {
    return decodeURIComponent(match[1].replace(/\+/g, ' '));
  }
};


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/

// `isPlainObject(thing)`
// -----------------
//
// Returns whether the given thing is a plain object.
module.exports = __webpack_require__(15);


/***/ }),
/* 12 */
/***/ (function(module, exports) {

/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/

/**
 * Returns a proxy function that, when call the first time, will call a target function.
 * Subsequent calls will not call the target function.
 * @param {Function} fn That target function to call a single time.
 * @param {Object} [context] The context in which to call the target function.
 * @returns {Function}
 */
module.exports = function(fn, context) {
  var result;

  return function() {
    if (fn) {
      result = fn.apply(context || this, arguments);
      fn = null;
    }

    return result;
  };
};


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/

var cookie = __webpack_require__(4);
var logger = __webpack_require__(1);
var prefixedLogger = logger.createPrefixedLogger('Custom Script');

module.exports = function(buildInfo, setDebugOutputEnabled) {
  // Will get replaced by the directCall event delegate from the DTM extension. Exists here in
  // case there are no direct call rules (and therefore the directCall event delegate won't get
  // included) and our customers are still calling the method. In this case, we don't want an error
  // to be thrown.
  _satellite.track = function() {};

  // Will get replaced by the Marketing Cloud ID extension if installed. Exists here in case
  // the extension is not installed and our customers are still calling the method. In this case,
  // we don't want an error to be thrown. This method existed before Reactor.
  _satellite.getVisitorId = function() { return null; };

  _satellite.buildInfo = buildInfo;

  _satellite.logger = prefixedLogger;

  /**
   * Log a message. We keep this due to legacy baggage.
   * @param {string} message The message to log.
   * @param {number} [level] A number that represents the level of logging.
   * 3=info, 4=warn, 5=error, anything else=log
   */
  _satellite.notify = function(message, level) {
    logger.warn('_satellite.notify is deprecated. Please use the `_satellite.logger` API.');

    switch (level) {
      case 3:
        prefixedLogger.info(message);
        break;
      case 4:
        prefixedLogger.warn(message);
        break;
      case 5:
        prefixedLogger.error(message);
        break;
      default:
        prefixedLogger.log(message);
    }
  };

  _satellite.getVar = __webpack_require__(7);
  _satellite.setVar = __webpack_require__(41);

  /**
   * Writes a cookie.
   * @param {string} name The name of the cookie to save.
   * @param {string} value The value of the cookie to save.
   * @param {number} [days] The number of days to store the cookie. If not specified, the cookie
   * will be stored for the session only.
   */
  _satellite.setCookie = function(name, value, days) {
    logger.warn('_satellite.setCookie is deprecated. Please use the `_satellite.cookie` API.');

    var options = {};

    if (days) {
      var date = new Date();
      date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
      options.expires = date;
    }

    document.cookie = cookie.serialize(name, value, options);
  };

  /**
   * Reads a cookie value.
   * @param {string} name The name of the cookie to read.
   * @returns {string}
   */
  _satellite.getCookie = _satellite.readCookie = function(name) {
    logger.warn('_satellite.getCookie is deprecated. Please use the `_satellite.cookie` API.');

    return cookie.parse(document.cookie)[name];
  };

  /**
   * Removes a cookie value.
   * @param name
   */
  _satellite.removeCookie = function(name) {
    logger.warn('_satellite.removeCookie is deprecated. Please use the `_satellite.cookie` API.');

    _satellite.setCookie(name, '', -1);
  };

  _satellite.cookie = cookie;

  _satellite.setDebug = function(value) {
    setDebugOutputEnabled(value);

    // TODO: Have state emit an event that logger listens to instead?
    logger.outputEnabled = value;
  };
};


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/

var replaceVarTokens = __webpack_require__(5);
var logger = __webpack_require__(1);
var state = __webpack_require__(2);

var MODULE_NOT_FUNCTION_ERROR = 'Module did not export a function.';

var EXCEPTION_LOGIC_TYPE = 'exception';

var getModuleDisplayName = function(ruleComponent) {
  return state.getModuleDisplayName(ruleComponent.modulePath) || ruleComponent.modulePath;
};

var getErrorMessage = function(ruleComponent, rule, errorMessage, errorStack) {
  var moduleDisplayName = getModuleDisplayName(ruleComponent);
  return 'Failed to execute ' + moduleDisplayName + ' for ' + rule.name + ' rule. ' +
    errorMessage + (errorStack ? '\n' + errorStack : '');
};

var runActions = function(rule, relatedElement, event) {
  if (state.getShouldExecuteActions() && rule.actions) {
    rule.actions.forEach(function(action) {
      action.settings = action.settings || {};

      var moduleExports;

      try {
        moduleExports = state.getModuleExports(action.modulePath);
      } catch (e) {
        logger.error(getErrorMessage(action, rule, e.message, e.stack));
        return;
      }

      if (typeof moduleExports !== 'function') {
        logger.error(getErrorMessage(action, rule, MODULE_NOT_FUNCTION_ERROR));
        return;
      }

      var settings = replaceVarTokens(action.settings, relatedElement, event);

      try {
        moduleExports(settings, relatedElement, event);
      } catch (e) {
        logger.error(getErrorMessage(action, rule, e.message, e.stack));
        return;
      }
    });
  }

  logger.log('Rule "' + rule.name + '" fired.');
};

var checkConditions = function(rule, relatedElement, event) {
  if (rule.conditions) {
    for (var i = 0; i < rule.conditions.length; i++) {
      var condition = rule.conditions[i];
      condition.settings = condition.settings || {};

      var moduleExports;

      try {
        moduleExports = state.getModuleExports(condition.modulePath);
      } catch (e) {
        logger.error(getErrorMessage(condition, rule, e.message, e.stack));
        return;
      }

      if (typeof moduleExports !== 'function') {
        logger.error(getErrorMessage(condition, rule, MODULE_NOT_FUNCTION_ERROR));
        return;
      }

      var settings = replaceVarTokens(condition.settings, relatedElement, event);

      var result;

      try {
        result = moduleExports(settings, relatedElement, event);
      } catch (e) {
        logger.error(getErrorMessage(condition, rule, e.message, e.stack));
        // We return because we want to assume the condition would have failed and therefore
        // we don't want to run the following conditions or the rule's actions.
        return;
      }

      var isExceptionCondition = condition.logicType === EXCEPTION_LOGIC_TYPE;

      if ((!result && !isExceptionCondition) || (result && isExceptionCondition)) {
        var conditionDisplayName = getModuleDisplayName(condition);
        logger.log('Condition ' + conditionDisplayName + ' for rule ' + rule.name + ' not met.');
        return;
      }
    }
  }

  runActions(rule, relatedElement, event);
};

var initEventModules = function(rule) {
  if (rule.events) {
    /**
     * This is the callback that executes a particular rule when an event has occurred.
     * @callback ruleTrigger
     * @param {HTMLElement} [relatedElement] The element the rule targeted.
     * @param {Object} [event] An event object (native or synthetic) that contains detail
     * regarding the event that occurred.
     */
    var trigger = function(relatedElement, event) {
      checkConditions(rule, relatedElement, event);
    };

    rule.events.forEach(function(event) {
      event.settings = event.settings || {};

      var moduleExports;

      try {
        moduleExports = state.getModuleExports(event.modulePath);
      } catch (e) {
        logger.error(getErrorMessage(event, rule, e.message, e.stack));
        return;
      }

      if (typeof moduleExports !== 'function') {
        logger.error(getErrorMessage(event, rule, MODULE_NOT_FUNCTION_ERROR));
        return;
      }

      var settings = replaceVarTokens(event.settings);

      try {
        moduleExports(settings, trigger);
      } catch (e) {
        logger.error(getErrorMessage(event, rule, e.message, e.stack));
        return;
      }
    });
  }
};

module.exports = function() {
  state.getRules().forEach(function(rule) {
    initEventModules(rule);
  });
};



/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*!
 * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
 *
 * Copyright (c) 2014-2015, Jon Schlinkert.
 * Licensed under the MIT License.
 */



var isObject = __webpack_require__(16);

function isObjectObject(o) {
  return isObject(o) === true
    && Object.prototype.toString.call(o) === '[object Object]';
}

module.exports = function isPlainObject(o) {
  var ctor,prot;
  
  if (isObjectObject(o) === false) return false;
  
  // If has modified constructor
  ctor = o.constructor;
  if (typeof ctor !== 'function') return false;
  
  // If has modified prototype
  prot = ctor.prototype;
  if (isObjectObject(prot) === false) return false;
  
  // If constructor does not have an Object-specific method
  if (prot.hasOwnProperty('isPrototypeOf') === false) {
    return false;
  }
  
  // Most likely a plain Object
  return true;
};


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*!
 * isobject <https://github.com/jonschlinkert/isobject>
 *
 * Copyright (c) 2014-2015, Jon Schlinkert.
 * Licensed under the MIT License.
 */



module.exports = function isObject(val) {
  return val != null && typeof val === 'object'
    && !Array.isArray(val);
};


/***/ }),
/* 17 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(setImmediate) {(function (root) {

  // Store setTimeout reference so promise-polyfill will be unaffected by
  // other code modifying setTimeout (like sinon.useFakeTimers())
  var setTimeoutFunc = setTimeout;

  function noop() {}
  
  // Polyfill for Function.prototype.bind
  function bind(fn, thisArg) {
    return function () {
      fn.apply(thisArg, arguments);
    };
  }

  function Promise(fn) {
    if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new');
    if (typeof fn !== 'function') throw new TypeError('not a function');
    this._state = 0;
    this._handled = false;
    this._value = undefined;
    this._deferreds = [];

    doResolve(fn, this);
  }

  function handle(self, deferred) {
    while (self._state === 3) {
      self = self._value;
    }
    if (self._state === 0) {
      self._deferreds.push(deferred);
      return;
    }
    self._handled = true;
    Promise._immediateFn(function () {
      var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;
      if (cb === null) {
        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);
        return;
      }
      var ret;
      try {
        ret = cb(self._value);
      } catch (e) {
        reject(deferred.promise, e);
        return;
      }
      resolve(deferred.promise, ret);
    });
  }

  function resolve(self, newValue) {
    try {
      // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure
      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');
      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {
        var then = newValue.then;
        if (newValue instanceof Promise) {
          self._state = 3;
          self._value = newValue;
          finale(self);
          return;
        } else if (typeof then === 'function') {
          doResolve(bind(then, newValue), self);
          return;
        }
      }
      self._state = 1;
      self._value = newValue;
      finale(self);
    } catch (e) {
      reject(self, e);
    }
  }

  function reject(self, newValue) {
    self._state = 2;
    self._value = newValue;
    finale(self);
  }

  function finale(self) {
    if (self._state === 2 && self._deferreds.length === 0) {
      Promise._immediateFn(function() {
        if (!self._handled) {
          Promise._unhandledRejectionFn(self._value);
        }
      });
    }

    for (var i = 0, len = self._deferreds.length; i < len; i++) {
      handle(self, self._deferreds[i]);
    }
    self._deferreds = null;
  }

  function Handler(onFulfilled, onRejected, promise) {
    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;
    this.onRejected = typeof onRejected === 'function' ? onRejected : null;
    this.promise = promise;
  }

  /**
   * Take a potentially misbehaving resolver function and make sure
   * onFulfilled and onRejected are only called once.
   *
   * Makes no guarantees about asynchrony.
   */
  function doResolve(fn, self) {
    var done = false;
    try {
      fn(function (value) {
        if (done) return;
        done = true;
        resolve(self, value);
      }, function (reason) {
        if (done) return;
        done = true;
        reject(self, reason);
      });
    } catch (ex) {
      if (done) return;
      done = true;
      reject(self, ex);
    }
  }

  Promise.prototype['catch'] = function (onRejected) {
    return this.then(null, onRejected);
  };

  Promise.prototype.then = function (onFulfilled, onRejected) {
    var prom = new (this.constructor)(noop);

    handle(this, new Handler(onFulfilled, onRejected, prom));
    return prom;
  };

  Promise.all = function (arr) {
    var args = Array.prototype.slice.call(arr);

    return new Promise(function (resolve, reject) {
      if (args.length === 0) return resolve([]);
      var remaining = args.length;

      function res(i, val) {
        try {
          if (val && (typeof val === 'object' || typeof val === 'function')) {
            var then = val.then;
            if (typeof then === 'function') {
              then.call(val, function (val) {
                res(i, val);
              }, reject);
              return;
            }
          }
          args[i] = val;
          if (--remaining === 0) {
            resolve(args);
          }
        } catch (ex) {
          reject(ex);
        }
      }

      for (var i = 0; i < args.length; i++) {
        res(i, args[i]);
      }
    });
  };

  Promise.resolve = function (value) {
    if (value && typeof value === 'object' && value.constructor === Promise) {
      return value;
    }

    return new Promise(function (resolve) {
      resolve(value);
    });
  };

  Promise.reject = function (value) {
    return new Promise(function (resolve, reject) {
      reject(value);
    });
  };

  Promise.race = function (values) {
    return new Promise(function (resolve, reject) {
      for (var i = 0, len = values.length; i < len; i++) {
        values[i].then(resolve, reject);
      }
    });
  };

  // Use polyfill for setImmediate for performance gains
  Promise._immediateFn = (typeof setImmediate === 'function' && function (fn) { setImmediate(fn); }) ||
    function (fn) {
      setTimeoutFunc(fn, 0);
    };

  Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {
    if (typeof console !== 'undefined' && console) {
      console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console
    }
  };

  /**
   * Set the immediate function to execute callbacks
   * @param fn {function} Function to execute
   * @deprecated
   */
  Promise._setImmediateFn = function _setImmediateFn(fn) {
    Promise._immediateFn = fn;
  };

  /**
   * Change the function to execute on unhandled rejection
   * @param {function} fn Function to execute on unhandled rejection
   * @deprecated
   */
  Promise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {
    Promise._unhandledRejectionFn = fn;
  };
  
  if (typeof module !== 'undefined' && module.exports) {
    module.exports = Promise;
  } else if (!root.Promise) {
    root.Promise = Promise;
  }

})(this);

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(20).setImmediate))

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
    "use strict";

    if (global.setImmediate) {
        return;
    }

    var nextHandle = 1; // Spec says greater than zero
    var tasksByHandle = {};
    var currentlyRunningATask = false;
    var doc = global.document;
    var registerImmediate;

    function setImmediate(callback) {
      // Callback can either be a function or a string
      if (typeof callback !== "function") {
        callback = new Function("" + callback);
      }
      // Copy function arguments
      var args = new Array(arguments.length - 1);
      for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i + 1];
      }
      // Store and register the task
      var task = { callback: callback, args: args };
      tasksByHandle[nextHandle] = task;
      registerImmediate(nextHandle);
      return nextHandle++;
    }

    function clearImmediate(handle) {
        delete tasksByHandle[handle];
    }

    function run(task) {
        var callback = task.callback;
        var args = task.args;
        switch (args.length) {
        case 0:
            callback();
            break;
        case 1:
            callback(args[0]);
            break;
        case 2:
            callback(args[0], args[1]);
            break;
        case 3:
            callback(args[0], args[1], args[2]);
            break;
        default:
            callback.apply(undefined, args);
            break;
        }
    }

    function runIfPresent(handle) {
        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
        // So if we're currently running a task, we'll need to delay this invocation.
        if (currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // "too much recursion" error.
            setTimeout(runIfPresent, 0, handle);
        } else {
            var task = tasksByHandle[handle];
            if (task) {
                currentlyRunningATask = true;
                try {
                    run(task);
                } finally {
                    clearImmediate(handle);
                    currentlyRunningATask = false;
                }
            }
        }
    }

    function installNextTickImplementation() {
        registerImmediate = function(handle) {
            process.nextTick(function () { runIfPresent(handle); });
        };
    }

    function canUsePostMessage() {
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `global.postMessage` means something completely different and can't be used for this purpose.
        if (global.postMessage && !global.importScripts) {
            var postMessageIsAsynchronous = true;
            var oldOnMessage = global.onmessage;
            global.onmessage = function() {
                postMessageIsAsynchronous = false;
            };
            global.postMessage("", "*");
            global.onmessage = oldOnMessage;
            return postMessageIsAsynchronous;
        }
    }

    function installPostMessageImplementation() {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

        var messagePrefix = "setImmediate$" + Math.random() + "$";
        var onGlobalMessage = function(event) {
            if (event.source === global &&
                typeof event.data === "string" &&
                event.data.indexOf(messagePrefix) === 0) {
                runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };

        if (global.addEventListener) {
            global.addEventListener("message", onGlobalMessage, false);
        } else {
            global.attachEvent("onmessage", onGlobalMessage);
        }

        registerImmediate = function(handle) {
            global.postMessage(messagePrefix + handle, "*");
        };
    }

    function installMessageChannelImplementation() {
        var channel = new MessageChannel();
        channel.port1.onmessage = function(event) {
            var handle = event.data;
            runIfPresent(handle);
        };

        registerImmediate = function(handle) {
            channel.port2.postMessage(handle);
        };
    }

    function installReadyStateChangeImplementation() {
        var html = doc.documentElement;
        registerImmediate = function(handle) {
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement("script");
            script.onreadystatechange = function () {
                runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
        };
    }

    function installSetTimeoutImplementation() {
        registerImmediate = function(handle) {
            setTimeout(runIfPresent, 0, handle);
        };
    }

    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

    // Don't get fooled by e.g. browserify environments.
    if ({}.toString.call(global.process) === "[object process]") {
        // For Node.js before 0.9
        installNextTickImplementation();

    } else if (canUsePostMessage()) {
        // For non-IE10 modern browsers
        installPostMessageImplementation();

    } else if (global.MessageChannel) {
        // For web workers, where supported
        installMessageChannelImplementation();

    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
        // For IE 6–8
        installReadyStateChangeImplementation();

    } else {
        // For older browsers
        installSetTimeoutImplementation();
    }

    attachTo.setImmediate = setImmediate;
    attachTo.clearImmediate = clearImmediate;
}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(21), __webpack_require__(17)))

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

var apply = Function.prototype.apply;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) {
  if (timeout) {
    timeout.close();
  }
};

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(window, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// setimmediate attaches itself to the global object
__webpack_require__(19);
exports.setImmediate = setImmediate;
exports.clearImmediate = clearImmediate;


/***/ }),
/* 21 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/

var state = __webpack_require__(2);

if (!window._satellite) {
  window._satellite = {
    container: {
      rules: []
    }
  };
}

__webpack_require__(13)(
  window._satellite.container.buildInfo,
  state.setDebugOutputEnabled
);

state.init(window._satellite.container); // Must come first.
__webpack_require__(1).outputEnabled = state.getDebugOutputEnabled();
__webpack_require__(14)(); // Must come last.


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/

/**
 * Creates a function that, when called, will return a configuration object with data element
 * tokens replaced.
 *
 * @param {Object} settings
 * @returns {Function}
 */
module.exports = function(settings) {
  // We pull in replaceVarTokens here and not at the top of the file to prevent a
  // circular reference since dependencies of replaceVarTokens requires state which requires
  // this module.
  var replaceVarTokens = __webpack_require__(5);

  return function() {
    return settings ? replaceVarTokens(settings) : {};
  };
};


/***/ }),
/* 24 */
/***/ (function(module, exports) {

/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/

/**
 * Creates a function that, when called, will return the full hosted lib file URL.
 *
 * @param {string} hostedLibFilesBaseUrl
 * @returns {Function}
 */
module.exports = function(hostedLibFilesBaseUrl) {
  return function(file) {
    return hostedLibFilesBaseUrl + file;
  };
};


/***/ }),
/* 25 */
/***/ (function(module, exports) {

/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/

/**
 * Creates a function that, when called with an extension name and module name, will return the
 * exports of the respective shared module.
 *
 * @param {Object} extensions
 * @param {Object} moduleProvider
 * @returns {Function}
 */
module.exports = function(extensions, moduleProvider) {
  return function(extensionName, moduleName) {
    var extension = extensions[extensionName];

    if (extension) {
      var modules = extension.modules;
      if (modules) {
        var referencePaths = Object.keys(modules);
        for (var i = 0; i < referencePaths.length; i++) {
          var referencePath = referencePaths[i];
          var module = modules[referencePath];
          if (module.sharedName === moduleName) {
            return moduleProvider.getModuleExports(referencePath);
          }
        }
      }
    }
  };
};


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/

var CORE_MODULE_SCOPE = '@turbine/';

var modules = {
  'promise': __webpack_require__(8),
  'weak-map': __webpack_require__(32),
  'assign': __webpack_require__(33),
  'client-info': __webpack_require__(34),
  'load-script': __webpack_require__(39),
  'get-query-param': __webpack_require__(10),
  'is-plain-object': __webpack_require__(11),
  'get-data-element-value': __webpack_require__(9),
  'cookie': __webpack_require__(35),
  'debounce': __webpack_require__(36),
  'once': __webpack_require__(12),
  'write-html': __webpack_require__(42),
  'replace-tokens': __webpack_require__(5),
  'on-page-bottom': __webpack_require__(40),
  'window': __webpack_require__(0),
  'document': __webpack_require__(3)
};

/**
 * Creates a function which can be passed as a "require" function to extension modules.
 *
 * @param {Object} buildInfo
 * @param {Object} propertySettings
 * @param {Function} getExtensionSettings
 * @param {Function} getSharedModuleExports
 * @param {Function} getModuleExportsByRelativePath
 * @returns {Function}
 */
module.exports = function(dynamicModules) {
  dynamicModules = dynamicModules || {};

  var allModules = Object.create(modules);
  allModules['logger'] = dynamicModules.logger;
  allModules['build-info'] = dynamicModules.buildInfo;
  allModules['property-settings'] = dynamicModules.propertySettings;
  allModules['get-extension-settings'] = dynamicModules.getExtensionSettings;
  allModules['get-shared-module'] = dynamicModules.getSharedModuleExports;
  allModules['get-hosted-lib-file-url'] = dynamicModules.getHostedLibFileUrl;

  return function(key) {
    if (key.indexOf(CORE_MODULE_SCOPE) === 0) {
      var coreModule = allModules[key.substr(CORE_MODULE_SCOPE.length)];
      if (coreModule) {
        return coreModule;
      }
    }

    if (key.indexOf('./') === 0 || key.indexOf('../') === 0) {
      return dynamicModules.getModuleExportsByRelativePath(key);
    }

    throw new Error('Cannot resolve module "' + key + '".');
  };
};


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/

var cookie = __webpack_require__(4);

var COOKIE_PREFIX = '_sdsat_';

var storeLength = {
  PAGEVIEW: 'pageview',
  SESSION: 'session',
  VISITOR: 'visitor'
};

var pageviewCache = {};

module.exports = {
  setValue: function(key, length, value) {
    switch (length) {
      case storeLength.PAGEVIEW:
        pageviewCache[key] = value;
        break;
      case storeLength.SESSION:
        document.cookie = cookie.serialize(COOKIE_PREFIX + key, value);
        break;
      case storeLength.VISITOR:
        var expireDate = new Date();
        expireDate.setTime(expireDate.getTime() + (365 * 2 * 24 * 60 * 60 * 1000)); // 2 years
        document.cookie = cookie.serialize(COOKIE_PREFIX + key, value, {
          expires: expireDate
        });
        break;
    }
  },
  getValue: function(key, length) {
    switch (length) {
      case storeLength.PAGEVIEW:
        return pageviewCache[key];
      case storeLength.SESSION:
      case storeLength.VISITOR:
        return cookie.parse(document.cookie)[COOKIE_PREFIX + key];
    }
  }
};


/***/ }),
/* 28 */
/***/ (function(module, exports) {

/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/

module.exports = function(script, require) {
  var module = {
    exports: {}
  };

  script.call(module.exports, module, module.exports, require);

  return module.exports;
};


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/

//Required for mocking out the window object in getLocalStorageItem.test.js
var window = __webpack_require__(0);

/**
 * Reads a value from local storage.
 * @param {string} name The name of the item to be read.
 * @returns {string}
 */
module.exports = function(name) {
  // When local storage is disabled on Safari, the mere act of referencing window.localStorage
  // throws an error. For this reason, referencing window.localStorage without being inside
  // a try-catch should be avoided.
  try {
    return window.localStorage.getItem(name);
  } catch (e) {
    return null;
  }
};


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/

var state = __webpack_require__(2);

// isVar(variableName)
// ==========================
//
// Determines if the provided name is a valid variable, where the variable
// can be a data element, defined in the "data" section
// of the initial config, or reference properties on
// an element, event, or target of the event in question,
// a query parameter, or a random number.
//
// - `variableName` - the name of the variable to get
module.exports = function(variableName) {
  var nameBeforeDot = variableName.split('.')[0];

  return Boolean(
    variableName === 'URI' ||
    variableName === 'uri' ||
    variableName === 'protocol' ||
    variableName === 'hostname' ||
    state.getDataElementDefinition(variableName) ||
    nameBeforeDot === 'this' ||
    nameBeforeDot === 'event' ||
    nameBeforeDot === 'target' ||
    nameBeforeDot === 'window' ||
    nameBeforeDot === 'param' ||
    nameBeforeDot.match(/^rand([0-9]+)$/) ||
    state.customVars.hasOwnProperty(nameBeforeDot)
  );
};


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/

var extractModuleExports = __webpack_require__(28);
var logger = __webpack_require__(1);

var moduleByReferencePath = {};

var registerModule = function(referencePath, module, require) {
  module = Object.create(module);
  module.require = require;
  moduleByReferencePath[referencePath] = module;
};

var hydrateCache = function() {
  Object.keys(moduleByReferencePath).forEach(function(referencePath) {
    try {
      getModuleExports(referencePath);
    } catch (e) {
      var errorMessage = 'Error initializing module ' + referencePath + '. ' +
        e.message + (e.stack ? '\n' + e.stack : '');
      logger.error(errorMessage);
    }
  });
};

var getModuleExports = function(referencePath) {
  var module = moduleByReferencePath[referencePath];

  if (!module) {
    throw new Error('Module ' + referencePath + ' not found.');
  }

  // Using hasOwnProperty instead of a falsey check because the module could export undefined
  // in which case we don't want to execute the module each time the exports is requested.
  if (!module.hasOwnProperty('exports')) {
    module.exports = extractModuleExports(module.script, module.require);
  }

  return module.exports;
};

var getModuleDisplayName = function(referencePath) {
  var module = moduleByReferencePath[referencePath];
  return module ? module.displayName : null;
};

module.exports = {
  registerModule: registerModule,
  hydrateCache: hydrateCache,
  getModuleExports: getModuleExports,
  getModuleDisplayName: getModuleDisplayName
};




/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @license
 * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 */
// This is copied from
// https://github.com/webcomponents/webcomponentsjs/blob/7dc6731eb9c9f9c3fea4419c50c6ee3ca0367544/src/WeakMap/WeakMap.js
// because there's not an npm package that makes it easy to import only WeakMap. We've also
// modified it slightly so that it doesn't ever set window.WeakMap.

var window = __webpack_require__(0);
var WeakMap = window.WeakMap;

if (typeof WeakMap === 'undefined') {
  var defineProperty = Object.defineProperty;
  var counter = Date.now() % 1e9;

  WeakMap = function() {
    this.name = '__st' + (Math.random() * 1e9 >>> 0) + (counter++ + '__');
  };

  WeakMap.prototype = {
    set: function(key, value) {
      var entry = key[this.name];
      if (entry && entry[0] === key)
        entry[1] = value;
      else
        defineProperty(key, this.name, {value: [key, value], writable: true});
      return this;
    },
    get: function(key) {
      var entry;
      return (entry = key[this.name]) && entry[0] === key ?
        entry[1] : undefined;
    },
    delete: function(key) {
      var entry = key[this.name];
      if (!entry || entry[0] !== key) return false;
      entry[0] = entry[1] = undefined;
      return true;
    },
    has: function(key) {
      var entry = key[this.name];
      if (!entry) return false;
      return entry[0] === key;
    }
  };
}

module.exports = WeakMap;


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/

var window = __webpack_require__(0);
var assign = window.Object.assign;

if (typeof assign === 'undefined') {
  assign = function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var from = arguments[i];
      if (from === null || from === undefined) {
        continue;
      }
      var keys = Object.keys(from);
      for (var j = 0; j < keys.length; j++) {
        var key = keys[j];
        target[key] = from[key];
      }
    }
    return target;
  };
}

module.exports = assign;


/***/ }),
/* 34 */
/***/ (function(module, exports) {

/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/

var matchUserAgent = function(regexs) {
  return function(userAgent) {
    var keys = Object.keys(regexs);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      var regex = regexs[key];
      if (regex.test(userAgent)) {
        return key;
      }
    }
    return 'Unknown';
  };
};

var browser = matchUserAgent({
  'IE Edge Mobile': /Windows Phone.*Edge/,
  'IE Edge': /Edge/,
  OmniWeb: /OmniWeb/,
  'Opera Mini': /Opera Mini/,
  'Opera Mobile': /Opera Mobi/,
  Opera: /Opera/,
  'Mobile Safari': /Mobile(\/[0-9A-z]+)? Safari/,
  Chrome: /Chrome/,
  Firefox: /Firefox/,
  'IE Mobile': /IEMobile/,
  IE: /MSIE|Trident/,
  Safari: /Safari/
})(navigator.userAgent);

var os = matchUserAgent({
  iOS: /iPhone|iPad|iPod/,
  Blackberry: /BlackBerry/,
  'Symbian OS': /SymbOS/,
  Maemo: /Maemo/,
  Android: /Android [0-9\.]+;/,
  Linux: / Linux /,
  Unix: /FreeBSD|OpenBSD|CrOS/,
  Windows: /[\( ]Windows /,
  MacOS: /Macintosh;/
})(navigator.userAgent);

var deviceType = matchUserAgent({
  iPhone: /iPhone/,
  iPad: /iPad/,
  iPod: /iPod/,
  Nokia: /SymbOS|Maemo/,
  'Windows Phone': /IEMobile/,
  Blackberry: /BlackBerry/,
  Android: /Android [0-9\.]+;/,
  Desktop: /.*/
})(navigator.userAgent);

/**
 * Contains information about the client environment.
 */
module.exports = {
  browser: browser,
  os: os,
  deviceType: deviceType
};


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/

module.exports = __webpack_require__(4);


/***/ }),
/* 36 */
/***/ (function(module, exports) {

/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/

/**
 * Debounce function. Returns a proxy function that, when called multiple times, will only execute
 * the target function after a certain delay has passed without the proxy function being called
 * again.
 * @param {Function} fn The target function to call once the delay period has passed.
 * @param {Number} delay The number of milliseconds that must pass before the target function is
 * called.
 * @param {Object} [context] The context in which to call the target function.
 * @returns {Function}
 */
module.exports = function(fn, delay, context) {
  var timeoutId = null;
  return function() {
    var ctx = context || this;
    var args = arguments;
    clearTimeout(timeoutId);
    timeoutId = setTimeout(function() {
      fn.apply(ctx, args);
    }, delay);
  };
};


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/

var document = __webpack_require__(3);

module.exports = function() {
  // This should not be cached because it can change when using the browser history API.
  return document.location.pathname + document.location.search;
};


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/

/*eslint no-alert:0*/

var document = __webpack_require__(3);

var domContentLoaded = false;

document.addEventListener('DOMContentLoaded', function() {
  domContentLoaded = true;
});

module.exports = function() {
  return domContentLoaded;
  // We can't do something like the following because IE (at least 9 and 10) sets readyState to
  // interactive after loading the first external file which comes long before the
  // DOMContentLoaded event.
  // return ['complete', 'loaded', 'interactive'].indexOf(document.readyState) !== -1;
};


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/

var Promise = __webpack_require__(8);

var getPromise = function(url, script) {
  return new Promise(function(resolve, reject) {
    if ('onload' in script) {
      script.onload = function() {
        resolve(script);
      };

      script.onerror = function() {
        reject(new Error('Failed to load script ' + url));
      };
    } else if ('readyState' in script) {
      script.onreadystatechange = function() {
        var rs = script.readyState;
        if (rs === 'loaded' || rs === 'complete') {
          script.onreadystatechange = null;
          resolve(script);
        }
      };
    }
  });
};

module.exports = function(url) {
  var script = document.createElement('script');
  script.src = url;
  script.async = true;

  var promise = getPromise(url, script);

  document.getElementsByTagName('head')[0].appendChild(script);
  return promise;
};


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/



var window = __webpack_require__(0);
var document = __webpack_require__(3);
var once = __webpack_require__(12);
var logger = __webpack_require__(1);

var callbacks = [];

var pageBottomTriggered = false;

var pageBottomHandler = once(function() {
  pageBottomTriggered = true;

  callbacks.forEach(function(callback) {
    callback();
  });

  // No need to hold onto the functions anymore.
  callbacks = null;
});

window._satellite = window._satellite || {};

/**
 * Public function intended to be called by the hosting site at the bottom of the page.
 */
window._satellite.pageBottom = pageBottomHandler;

/**
 * Assume page bottom when DOMContentLoaded is fired, in case the hosting site didn't call
 * _satellite.pageBottom at the end of the page.
 */
document.addEventListener('DOMContentLoaded', function() {
  if (!pageBottomTriggered) {
    logger.error('_satellite.pageBottom() was not called before the document finished loading. ' +
      'Please call _satellite.pageBottom() at the end of the body tag to ensure proper behavior.');
    pageBottomHandler();
  }
});

/**
 * Page bottom utility. Calls the callback when _satellite.pageBottom() is called. If
 * _satellite.pageBottom() is not explicitly called, it will be simulated when
 * DOMContentLoaded is fired. If a callback is registered after _satellite.pageBottom() has been
 * called, the callback will be immediately executed. We cannot use a promise for this API
 * because when a promise is resolved, its handlers are executed asynchronously which may be too
 * late, for example, when the handler is trying to write script tags into the document using
 * document.write before a document has finished loaded. Promises executing handlers asynchronously
 * is according to spec as noted in note #1:
 * https://github.com/promises-aplus/promises-spec/tree/90a4116ca081af1b9e51b36e8074a6ab874e0932#notes
 */
module.exports = function(callback) {
  if (pageBottomTriggered) {
    callback();
  } else {
    callbacks.push(callback);
  }
};


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/

var customVars = __webpack_require__(2).customVars;

module.exports = function() {
  if (typeof arguments[0] === 'string') {
    customVars[arguments[0]] = arguments[1];
  } else if (arguments[0]) { // assume an object literal
    var mapping = arguments[0];
    for (var key in mapping) {
      customVars[key] = mapping[key];
    }
  }
};


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/

/*eslint no-alert:0*/

var hasDomContentLoaded = __webpack_require__(38);
var document = __webpack_require__(3);

module.exports = function(html) {
  // Document object in XML files is different from the ones in HTML files. Documents served with
  // the `application/xhtml+xml` MIME type don't have the `document.write` method.
  // More info: https://www.w3.org/MarkUp/2004/xhtml-faq#docwrite or https://developer.mozilla.org/en-US/docs/Archive/Web/Writing_JavaScript_for_HTML
  if (!document.write) {
    throw new Error('Cannot write HTML to the page. `document.write` is unavailable.');
  }

  if (hasDomContentLoaded()) {
    throw new Error('Cannot call `document.write` after `DOMContentloaded` has fired.');
  }

  document.write(html);
};


/***/ }),
/* 43 */
/***/ (function(module, exports) {

/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/

var JS_EXTENSION = '.js';

/**
 * @private
 * Returns the directory of a path. A limited version of path.dirname in nodejs.
 *
 * To keep it simple, it makes the following assumptions:
 * path has a least one slash
 * path does not end with a slash
 * path does not have empty segments (e.g., /src/lib//foo.bar)
 *
 * @param {string} path
 * @returns {string}
 */
var dirname = function(path) {
  return path.substr(0, path.lastIndexOf('/'));
};

/**
 * Determines if a string ends with a certain string.
 * @param {string} str The string to test.
 * @param {string} suffix The suffix to look for at the end of str.
 * @returns {boolean} Whether str ends in suffix.
 */
var endsWith = function(str, suffix) {
  return str.indexOf(suffix, str.length - suffix.length) !== -1;
};

/**
 * Given a starting path and a path relative to the starting path, returns the final path. A
 * limited version of path.resolve in nodejs.
 *
 * To keep it simple, it makes the following assumptions:
 * fromPath has at least one slash
 * fromPath does not end with a slash.
 * fromPath does not have empty segments (e.g., /src/lib//foo.bar)
 * relativePath starts with ./ or ../
 *
 * @param {string} fromPath
 * @param {string} relativePath
 * @returns {string}
 */
module.exports = function(fromPath, relativePath) {
  // Handle the case where the relative path does not end in the .js extension. We auto-append it.
  if (!endsWith(relativePath, JS_EXTENSION)) {
    relativePath = relativePath + JS_EXTENSION;
  }

  var relativePathSegments = relativePath.split('/');
  var resolvedPathSegments = dirname(fromPath).split('/');

  relativePathSegments.forEach(function(relativePathSegment) {
    if (!relativePathSegment || relativePathSegment === '.') {
      return;
    } else if (relativePathSegment === '..') {
      if (resolvedPathSegments.length) {
        resolvedPathSegments.pop();
      }
    } else {
      resolvedPathSegments.push(relativePathSegment);
    }
  });

  return resolvedPathSegments.join('/');
};


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

/***************************************************************************************
 * (c) 2017 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 ****************************************************************************************/

//Required for mocking out the window object in setLocalStorageItem.test.js
var window = __webpack_require__(0);

/**
 * Saves a value to local storage.
 * @param {string} name The name of the item to be saved.
 * @param {string} value The value of the item to be saved.
 * @returns {boolean} Whether the item was successfully saved to local storage.
 */
module.exports = function(name, value) {
  // When local storage is disabled on Safari, the mere act of referencing window.localStorage
  // throws an error. For this reason, referencing window.localStorage without being inside
  // a try-catch should be avoided.
  try {
    window.localStorage.setItem(name, value);
    return true;
  } catch (e) {
    return false;
  }
};


/***/ })
/******/ ]);